select ename, job, sal, deptno
from DM_EM_PROJECTION
where deptno = 10;

select ename, job, sal, deptno
from emp
where deptno = 20
and job = 'ANALYST';

select *
from emp
where ename
like 'M%';

select *
from emp
where ename
like '_L%';

select *
    from emp
    where ename
    like '%AM%';

select *
from emp
where ename
not like '%S';


-- union 연습

select empno, ename, sal, deptno, job
from emp
where job = 'CLERK';
UNION
select empno, ename, sal, deptno, job
from emp
where job = 'salesman';


SELECT EMPNO, ENAME, SAL, DEPTNO
FROM EMP
WHERE DEPTNO =10
UNION ALL
SELECT EMPNO, ENAME, SAL, DEPTNO
FROM EMP
WHERE DEPTNO = 10;

SELECT EMPNO, ENAME, SAL, DEPTNO
FROM EMP
WHERE DEPTNO =10
UNION
SELECT EMPNO, ENAME, SAL, DEPTNO
FROM EMP
WHERE DEPTNO = 10;

SELECT EMPNO, ENAME, SAL, DEPTNO
FROM EMP
MINUS
SELECT EMPNO, ENAME, SAL, DEPTNO
FROM EMP
WHERE DEPTNO = 10;

SELECT EMPNO, ENAME, SAL, DEPTNO
FROM EMP
INTERSECT
SELECT EMPNO, ENAME, SAL, DEPTNO
FROM EMP
WHERE DEPTNO = 10;

SELECT EMPNO, ENAME, SAL, DEPTNO
FROM EMP;

SELECT * FROM EMP
WHERE COMM IS NULL;

-- Oracle Function

SELECT ENAME, UPPER(ENAME), LOWER(ENAME) , INITCAP(ENAME)
FROM EMP;

SELECT SUM(SAL)
FROM EMP;

SELECT ENAME, SUM(SAL)
FROM EMP;

SELECT SUM(COMM)
FROM EMP;

SELECT SUM(DISTINCT SAL)
, SUM(ALL SAL)
, SUM(SAL)
FROM EMP;

SELECT COUNT(*)
FROM EMP;

SELECT COUNT(COMM)
FROM EMP;

SELECT COUNT(*)
FROM EMP
WHERE DEPTNO = 10;

SELECT COUNT(DISTINCT SAL)
, COUNT(ALL SAL)
, COUNT(SAL)
FROM EMP;

SELECT COUNT(ENAME)
FROM EMP
WHERE COMM IS NOT NULL;

SELECT * FROM EMP
WHERE UPPER(ENAME) = UPPER('scott');

SELECT ENAME,
       LENGTH(ENAME)
FROM EMP
    WHERE LENGTH(ENAME) < 5;

SELECT MAX(SAL)
FROM EMP
WHERE DEPTNO = 30;

SELECT MIN(SAL)
FROM EMP
WHERE DEPTNO = 30;

SELECT AVG(SAL)
FROM EMP
WHERE DEPTNO = 30;

SELECT AVG(DISTINCT SAL)
FROM EMP
WHERE DEPTNO = 30;

SELECT AVG(SAL)
FROM EMP
GROUP BY DEPTNO;

SELECT DEPTNO, JOB, AVG(SAL)
FROM EMP
GROUP BY DEPTNO, JOB
HAVING AVG(SAL) >= 2000
ORDER BY DEPTNO, JOB;

SELECT DEPTNO, JOB, AVG(SAL)
FROM EMP
GROUP BY DEPTNO, JOB
HAVING AVG(SAL) >= 2000;

SELECT DEPTNO, JOB, COUNT(*), MAX(SAL), SUM(SAL), AVG(SAL)
FROM EMP
GROUP BY DEPTNO, JOB;

SELECT DEPTNO, ENAME
FROM EMP
GROUP BY DEPTNO, ENAME;

SELECT DEPTNO, JOB, MAX(SAL)
FROM EMP
GROUP BY DEPTNO, JOB
ORDER BY DEPTNO, JOB;

SELECT *
FROM(SELECT DEPTNO, JOB, SAL
     FROM EMP)
PIVOT(MAX(SAL) FOR DEPTNO IN(10,20,30))
ORDER BY JOB;

SELECT *
FROM(SELECT JOB, DEPTNO, SAL
FROM EMP)
PIVOT(MAX(SAL)
    FOR JOB IN('CLERK' AS CLERK,
        'SALESMAN' AS SALES,
        'PRESIDENT' AS PRESID,
        'MANAGER' AS MANAG,
        'ANALYST' AS ANALY)
    )
ORDER BY DEPTNO;

SELECT DEPTNO
,MAX(DECODE(JOB, 'CLERK', SAL)) AS CLERK
,MAX(DECODE(JOB,'SALESMAN', SAL)) AS SALES
,MAX(DECODE(JOB,'PRESIDENT', SAL)) AS PRESI
,MAX(DECODE(JOB,'MANAGER', SAL)) AS MANAG
,MAX(DECODE(JOB,'ANALYST', SAL)) AS ANALY
FROM EMP
GROUP BY DEPTNO
ORDER BY DEPTNO;

-- 아래는 언어팩이 다르면 실행이 안될 수도 있다. 추천하지 않는다.
SELECT SYSDATE,
NEXT_DAY(SYSDATE, 'monday'), --월요일 = monday 입력
LAST_DAY(SYSDATE)
FROM DUAL;

--

SELECT *
FROM EMP E JOIN DEPT D
ON(E.DEPTNO = D.DEPTNO)
ORDER BY EMPNO;

SELECT EMPNO, ENAME, DEPTNO, DNAME, LOC
FROM EMP E, DEPT D
WHERE E.DEPTNO = D.DEPTNO;

SELECT E.EMPNO, E.ENAME, E.SAL, D.DEPTNO, D.DNAME, D.LOC
FROM EMP E, DEPT D
WHERE E.DEPTNO = D.DEPTNO
AND E.SAL <= 2000;
-- End
